input_file: ""
output_file: ""

# data prep
det_props: "/home/awilkins/larnd-sim/larnd-sim/larndsim/detector_properties/ndlar-module.yaml"
pixel_layout: "/home/awilkins/larnd-sim/larnd-sim/larndsim/pixel_layouts/multi_tile_layout-3.0.40.yaml"
vmap_path: "/home/awilkins/larnd_infill/larnd_infill/voxel_maps/vmap_zdownresolution10.yml"
data_prep_type: "reflection"
scalefactors: [ 0.0030120481927710845, 0.1111111111111111 ] # 1/332, 1/9
forward_facing_anode_zshift: 0.38
backward_facing_anode_zshift: -0.38
# For zdownsample10 vmap, each voxel corresponds to 2 far detector ticks (1us to 0.5us widths).
# So we should spread each infilled voxel over two FD time x positions. Ideally I should've used
# zdownsample of 5 but no time to go back and do that now
infilled_voxel_splits: 3

# model
n_feats_in: 2 # adc
n_feats_out: 1 # adc
adc_threshold: 4 # prune all predicted adc <= 1 in final layer
load_G: "/home/awilkins/larnd_infill/larnd_infill/saved_models/nu_infillcuts_forwardbackwardzshift038_zdownsample10-exp3_1_deep512extraconvs-netG_best_epoch68.pth"
model_params:
  final_layer: "hardtanh"
  enc_ch: [8, 16, 32, 64, 128, 256, 512]
  dec_ch: [8, 16, 32, 64, 128, 256, 512]
  nonlinearity: "elu"
  extra_convs: True
  norm_layer: "instance"
  use_dropout: False
  enc_ks: [5, 3, 3]
  dec_ks: [5, 3, 3]

# misc
batch_size: 12
device: "cuda:0"
cache_dir: "/share/rcifdata/awilkins/cache"

